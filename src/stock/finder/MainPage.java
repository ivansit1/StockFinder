/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock.finder;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.net.*;
import java.io.*;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.AbstractButton;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JTabbedPane;
import javax.swing.JToggleButton;
import javax.swing.ListModel;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SingleSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import stock.constant.ConstantVariables;
import stock.info.AllStocksList;
import stock.info.StockDetails;
import stock.info.StockPriceAndName;
import stock.thread.StockGraphThread;
import stock.thread.StockTableThread;
import stock.util.HtmlConnectUtil;
import stock.util.TableFilters;
import stock.util.TableSorters;
/**
 *
 * @author Ivan
 */
public class MainPage extends javax.swing.JFrame {    
    /**
     * Creates new form MainPage
     */
 
    public MainPage() {
            initComponents();
           ConstantVariables.Init();                   
           smaGraphBtn.setSelected(true);
           
             TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableStockDetails.getModel());    
         sorter.setComparator(3, TableSorters.setStockMarketCapSort());
         
         tableStockDetails.setRowSorter(sorter);          
         // sorter.setRowFilter(RowFilter.regexFilter("91.500"));
    }
    
  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterDlg = new javax.swing.JDialog();
        filterPanel = new javax.swing.JPanel();
        fStockCapSPanel1 = new javax.swing.JPanel();
        fStockCapLbl2 = new javax.swing.JLabel();
        fStockCapLTxt = new javax.swing.JTextField();
        fFLbl3 = new javax.swing.JLabel();
        fStockCapSPanel = new javax.swing.JPanel();
        fStockCapLbl1 = new javax.swing.JLabel();
        fStockCapSTxt = new javax.swing.JTextField();
        fFLbl2 = new javax.swing.JLabel();
        stockGraphBtnGrp = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        tabMainPanel = new javax.swing.JTabbedPane();
        panelStockDetails = new javax.swing.JPanel();
        tabStockPanel = new javax.swing.JTabbedPane();
        stockDetailPanel = new javax.swing.JPanel();
        searchbtn = new javax.swing.JButton();
        sPanelStockDetails = new javax.swing.JScrollPane();
        tableStockDetails = new javax.swing.JTable();
        filterBtn = new javax.swing.JToggleButton();
        searchItemBox = new javax.swing.JComboBox();
        showFilterPanelBtn = new javax.swing.JToggleButton();
        graphDetailPanel = new javax.swing.JPanel();
        graphContainPanel = new javax.swing.JPanel();
        stockListScroll = new javax.swing.JScrollPane();
        stockList = new javax.swing.JList();
        importStockListBtn = new javax.swing.JButton();
        stockGraphPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        dailyGraphLbl = new javax.swing.JLabel();
        horlyGraphLbl = new javax.swing.JLabel();
        weeklyGraphLbl = new javax.swing.JLabel();
        monthlyGraphLbl = new javax.swing.JLabel();
        bollingerGraphBtn = new javax.swing.JRadioButton();
        smaGraphBtn = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();

        filterDlg.setAlwaysOnTop(true);
        filterDlg.setMinimumSize(new java.awt.Dimension(400, 300));
        filterDlg.setName("Filter Dialog"); // NOI18N
        filterDlg.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                filterDlgComponentHidden(evt);
            }
        });

        filterPanel.setPreferredSize(new java.awt.Dimension(132, 10));
        filterPanel.setLayout(new java.awt.GridLayout(1, 2));

        fStockCapLbl2.setText("Stock Cap >");

        fStockCapLTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fStockCapLTxtActionPerformed(evt);
            }
        });

        fFLbl3.setText("億");

        javax.swing.GroupLayout fStockCapSPanel1Layout = new javax.swing.GroupLayout(fStockCapSPanel1);
        fStockCapSPanel1.setLayout(fStockCapSPanel1Layout);
        fStockCapSPanel1Layout.setHorizontalGroup(
            fStockCapSPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fStockCapSPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fStockCapLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(fStockCapLTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fFLbl3)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        fStockCapSPanel1Layout.setVerticalGroup(
            fStockCapSPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fStockCapSPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fStockCapSPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fStockCapSPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fStockCapLTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(fFLbl3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(fStockCapLbl2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        filterPanel.add(fStockCapSPanel1);

        fStockCapLbl1.setText("Stock Cap <");

        fStockCapSTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fStockCapSTxtActionPerformed(evt);
            }
        });

        fFLbl2.setText("億");

        javax.swing.GroupLayout fStockCapSPanelLayout = new javax.swing.GroupLayout(fStockCapSPanel);
        fStockCapSPanel.setLayout(fStockCapSPanelLayout);
        fStockCapSPanelLayout.setHorizontalGroup(
            fStockCapSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fStockCapSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fStockCapLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(fStockCapSTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fFLbl2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fStockCapSPanelLayout.setVerticalGroup(
            fStockCapSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fStockCapSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fStockCapSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, fStockCapSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fStockCapSTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(fFLbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(fStockCapLbl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        filterPanel.add(fStockCapSPanel);

        javax.swing.GroupLayout filterDlgLayout = new javax.swing.GroupLayout(filterDlg.getContentPane());
        filterDlg.getContentPane().setLayout(filterDlgLayout);
        filterDlgLayout.setHorizontalGroup(
            filterDlgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        filterDlgLayout.setVerticalGroup(
            filterDlgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabStockPanel.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tabStockPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabStockPanelStateChanged(evt);
            }
        });

        searchbtn.setText("search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        tableStockDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name", "Price", "Market Cap"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        sPanelStockDetails.setViewportView(tableStockDetails);
        if (tableStockDetails.getColumnModel().getColumnCount() > 0) {
            tableStockDetails.getColumnModel().getColumn(0).setMinWidth(0);
            tableStockDetails.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableStockDetails.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        filterBtn.setLabel("Filter");
        filterBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filterBtnItemStateChanged(evt);
            }
        });
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        searchItemBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Short", "Option", "Future" }));

        showFilterPanelBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showFilterPanelBtnItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout stockDetailPanelLayout = new javax.swing.GroupLayout(stockDetailPanel);
        stockDetailPanel.setLayout(stockDetailPanelLayout);
        stockDetailPanelLayout.setHorizontalGroup(
            stockDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockDetailPanelLayout.createSequentialGroup()
                .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchItemBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showFilterPanelBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterBtn)
                .addContainerGap())
            .addComponent(sPanelStockDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        stockDetailPanelLayout.setVerticalGroup(
            stockDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockDetailPanelLayout.createSequentialGroup()
                .addGroup(stockDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchItemBox)
                    .addComponent(searchbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filterBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showFilterPanelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanelStockDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );

        tabStockPanel.addTab("Stock Details", stockDetailPanel);

        graphContainPanel.setAutoscrolls(true);

        stockList.setModel(new DefaultListModel<StockPriceAndName>());
        stockList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                stockListValueChanged(evt);
            }
        });
        stockListScroll.setViewportView(stockList);

        importStockListBtn.setText("Import Stock Details");
        importStockListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importStockListBtnActionPerformed(evt);
            }
        });

        stockGraphPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(2, 2));
        jPanel1.add(dailyGraphLbl);
        jPanel1.add(horlyGraphLbl);
        jPanel1.add(weeklyGraphLbl);
        jPanel1.add(monthlyGraphLbl);

        jScrollPane1.setViewportView(jPanel1);

        stockGraphPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        stockGraphBtnGrp.add(bollingerGraphBtn);
        bollingerGraphBtn.setText("Bollinger");
        bollingerGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bollingerGraphBtnActionPerformed(evt);
            }
        });

        stockGraphBtnGrp.add(smaGraphBtn);
        smaGraphBtn.setText("SMA");
        smaGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smaGraphBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graphContainPanelLayout = new javax.swing.GroupLayout(graphContainPanel);
        graphContainPanel.setLayout(graphContainPanelLayout);
        graphContainPanelLayout.setHorizontalGroup(
            graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphContainPanelLayout.createSequentialGroup()
                .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(importStockListBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockListScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(graphContainPanelLayout.createSequentialGroup()
                        .addComponent(smaGraphBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bollingerGraphBtn)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(graphContainPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        graphContainPanelLayout.setVerticalGroup(
            graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphContainPanelLayout.createSequentialGroup()
                .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importStockListBtn)
                    .addComponent(bollingerGraphBtn)
                    .addComponent(smaGraphBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stockListScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                    .addComponent(stockGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(graphContainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(graphContainPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout graphDetailPanelLayout = new javax.swing.GroupLayout(graphDetailPanel);
        graphDetailPanel.setLayout(graphDetailPanelLayout);
        graphDetailPanelLayout.setHorizontalGroup(
            graphDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphContainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        graphDetailPanelLayout.setVerticalGroup(
            graphDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graphContainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabStockPanel.addTab("Graph", graphDetailPanel);

        javax.swing.GroupLayout panelStockDetailsLayout = new javax.swing.GroupLayout(panelStockDetails);
        panelStockDetails.setLayout(panelStockDetailsLayout);
        panelStockDetailsLayout.setHorizontalGroup(
            panelStockDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabStockPanel)
        );
        panelStockDetailsLayout.setVerticalGroup(
            panelStockDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabStockPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tabMainPanel.addTab("Main", panelStockDetails);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMainPanel)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMainPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tabMainPanel.getAccessibleContext().setAccessibleName("Main");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        (new StockTableThread(tableStockDetails, searchItemBox, searchbtn)).start();
    }//GEN-LAST:event_searchbtnActionPerformed

    private void tabStockPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabStockPanelStateChanged
        JTabbedPane sourceTabbedPane = (JTabbedPane) evt.getSource();
        int index = sourceTabbedPane.getSelectedIndex();
        System.out.println(index);
        if(index == 1){

        }
        System.out.println("Tab changed to: " + sourceTabbedPane.getTitleAt(index));
    }//GEN-LAST:event_tabStockPanelStateChanged

    boolean ignoreListUpdate = false;
    private void importStockListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importStockListBtnActionPerformed
        ignoreListUpdate = true; 
        dailyGraphLbl.setIcon(null);
        DefaultTableModel tempTableModel = (DefaultTableModel) tableStockDetails.getModel();
        DefaultListModel model = (DefaultListModel) stockList.getModel();
        model.removeAllElements();
        
        

        for(int i = 0; i < tableStockDetails.getRowCount(); i ++){
            model.addElement(new StockPriceAndName((String)tempTableModel.getValueAt(tableStockDetails.convertRowIndexToModel(i), 0), (String)tempTableModel.getValueAt(tableStockDetails.convertRowIndexToModel(i), 1)));
        }
        ignoreListUpdate = false;
    }//GEN-LAST:event_importStockListBtnActionPerformed

    private void stockListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_stockListValueChanged
        if (ignoreListUpdate == false){
            if (!evt.getValueIsAdjusting()) { 
                   DefaultListModel<StockPriceAndName> model = (DefaultListModel)stockList.getModel();                    
                   genStockGraphs((StockPriceAndName)model.getElementAt(stockList.getSelectedIndex()));
              }
        }
    }//GEN-LAST:event_stockListValueChanged

    private void genStockGraphs(StockPriceAndName stock ){
        (new StockGraphThread(stock.getIndex(), horlyGraphLbl, dailyGraphLbl, weeklyGraphLbl , monthlyGraphLbl, stockGraphBtnGrp)).start();         
    }
    
    private void filterBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filterBtnItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){                      
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableStockDetails.getModel());          
            List<RowFilter<TableModel,Object>> filters = new ArrayList<RowFilter<TableModel,Object>>();
           
            
            if(fStockCapLTxt.getText() != null && fStockCapLTxt.getText().length() > 0){
                filters.add(TableFilters.setStockMarkeCap(fStockCapLTxt.getText(), "L"));              
            }            
                
              if(fStockCapSTxt.getText() != null && fStockCapSTxt.getText().length() > 0){
                  filters.add(TableFilters.setStockMarkeCap(fStockCapSTxt.getText(), "S"));
            }
              
            RowFilter<TableModel,Object> serviceFilter = RowFilter.andFilter(filters);
            sorter.setRowFilter(serviceFilter);
            tableStockDetails.setRowSorter(sorter); 
         } else if(evt.getStateChange()==ItemEvent.DESELECTED){             
           tableStockDetails.setRowSorter(null);
        }
    }//GEN-LAST:event_filterBtnItemStateChanged

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
      
    }//GEN-LAST:event_filterBtnActionPerformed

    private void bollingerGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bollingerGraphBtnActionPerformed
        if(!stockList.isSelectionEmpty()){
            DefaultListModel<StockPriceAndName> model = (DefaultListModel)stockList.getModel();                    
            genStockGraphs((StockPriceAndName)model.getElementAt(stockList.getSelectedIndex()));
        }
    }//GEN-LAST:event_bollingerGraphBtnActionPerformed

    private void smaGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smaGraphBtnActionPerformed
        if(!stockList.isSelectionEmpty()){
            DefaultListModel<StockPriceAndName> model = (DefaultListModel)stockList.getModel();                    
            genStockGraphs((StockPriceAndName)model.getElementAt(stockList.getSelectedIndex()));
        }
    }//GEN-LAST:event_smaGraphBtnActionPerformed

    private void showFilterPanelBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showFilterPanelBtnItemStateChanged
       if(evt.getStateChange()==ItemEvent.SELECTED){
              filterDlg.setVisible(true);
         } else if(evt.getStateChange()==ItemEvent.DESELECTED){
             filterDlg.setVisible(false);           
        }
    }//GEN-LAST:event_showFilterPanelBtnItemStateChanged

    private void filterDlgComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_filterDlgComponentHidden
         System.out.println("HELLO");
        showFilterPanelBtn.setSelected(false);
    }//GEN-LAST:event_filterDlgComponentHidden

    private void fStockCapSTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fStockCapSTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fStockCapSTxtActionPerformed

    private void fStockCapLTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fStockCapLTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fStockCapLTxtActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         try {
        UIManager.setLookAndFeel(
            UIManager.getCrossPlatformLookAndFeelClassName());
        }     catch (Exception e) {
       // handle exception
          }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
     }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bollingerGraphBtn;
    private javax.swing.JLabel dailyGraphLbl;
    private javax.swing.JLabel fFLbl2;
    private javax.swing.JLabel fFLbl3;
    private javax.swing.JTextField fStockCapLTxt;
    private javax.swing.JLabel fStockCapLbl1;
    private javax.swing.JLabel fStockCapLbl2;
    private javax.swing.JPanel fStockCapSPanel;
    private javax.swing.JPanel fStockCapSPanel1;
    private javax.swing.JTextField fStockCapSTxt;
    private javax.swing.JToggleButton filterBtn;
    private javax.swing.JDialog filterDlg;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JPanel graphContainPanel;
    private javax.swing.JPanel graphDetailPanel;
    private javax.swing.JLabel horlyGraphLbl;
    private javax.swing.JButton importStockListBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel monthlyGraphLbl;
    private javax.swing.JPanel panelStockDetails;
    private javax.swing.JScrollPane sPanelStockDetails;
    private javax.swing.JComboBox searchItemBox;
    private javax.swing.JButton searchbtn;
    private javax.swing.JToggleButton showFilterPanelBtn;
    private javax.swing.JRadioButton smaGraphBtn;
    private javax.swing.JPanel stockDetailPanel;
    private javax.swing.ButtonGroup stockGraphBtnGrp;
    private javax.swing.JPanel stockGraphPanel;
    private javax.swing.JList stockList;
    private javax.swing.JScrollPane stockListScroll;
    private javax.swing.JTabbedPane tabMainPanel;
    private javax.swing.JTabbedPane tabStockPanel;
    private javax.swing.JTable tableStockDetails;
    private javax.swing.JLabel weeklyGraphLbl;
    // End of variables declaration//GEN-END:variables
}


